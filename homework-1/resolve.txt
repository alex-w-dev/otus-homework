Доброго времени суток.

Предположим, что мы имеем какой-то сервис по обработке тяжелых файлов.

Пользовательские сценарии:
1 – Логин/Выход
2 – При входе попадает в список своих файлов
3 – Доступна кнопка «Загрузить файл» - открывается форма загрузки файла
4 – После загрузки файла обновляется список
5 – в списке файлов у каждого есть 3 кнопки:
    а) «Скачать оригинал»
    б) «отправить на обработку», если файл обработан, то «cкачать результат»
    в) «Удалить всё»


Схема взаимодействия сервисов (описана в прилагаемом файле в c4 container уровне),

Описание сервисов:

UI
Фронтенд, пользовательское SPA приложение написанное на react,для взаимодействия пользователя с Апи нашего сервиса

Микросервис «Core»
Название: Core
Запросы:
• Получение текущего пользователя GET /api/v1/user
• Список файлов пользователя GET /api/v1/files
• Получение ссылки на скачивание оригинального файла GET /api/v1/files/:id/original
• Получение ссылки на скачивание файла результата GET /api/v1/files/:id/calculated
Команды:
• Вход пользоваля POST /api/v1/user/login
• Выход пользователя POST /api/v1/user/logout
• Удаление файла DELETE /api/v1/files/:id
• Запуск процесса обработки файла POST /api/v1/files/:id/calculate

События:
• FileCalculationRequest – устанавливает в очередь запрос на обработку файла с его ссылкой в S3
Зависимости:
• Слушает события FiileCalculationComplete от Calculation.
• Посылает уведомления пользователю в Notification при окончании обработки


Микросервис «Notification»
Название: Notification
Запросы:
• -
Команды:
• Оправка сообщения по почте POST /api/v1/mail

События:
• -
Зависимости:
• -

Микросервис «Calculation»
Название: Calculation – занимается сложными вычислениями: обрабатывает файлы
Запросы:
• -
Команды:
• -

События:
• FiileCalculationComplete – уведомляет о завершении каких-либо операций обработки файлов
Зависимости:
• Слушает события FiileCalculationRequest от Core.